from s3_storage.get_s3_conn import get_conn
from typing import List


def get_list_files_in_buckets(buckets: List[str], prefix: str | None = None):
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –±–∞–∫–µ—Ç–æ–≤ –Ω–∞ S3
    :param buckets: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω –±–∞–∫–µ—Ç–æ–≤
    :param prefix: –ü—Ä–µ—Ñ–∏–∫—Å (–ø—É—Ç—å –≤–Ω—É—Ç—Ä–∏ –±–∞–∫–µ—Ç–∞)
    """
    s3 = get_conn()

    for bucket in buckets:
        print(f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∫–µ—Ç–∞: {bucket}")
        try:
            params = {"Bucket": bucket}
            if prefix:
                params["Prefix"] = prefix

            response = s3.list_objects_v2(**params)

            if "Contents" in response:
                for obj in response["Contents"]:
                    print(f"  - {obj['Key']} (–†–∞–∑–º–µ—Ä: {obj['Size']} –±–∞–π—Ç)")
            else:
                print("  –ë–∞–∫–µ—Ç –ø—É—Å—Ç–æ–π.")
        except Exception as e:
            print(f"  ‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∫–µ—Ç–∞: {e}")

        print("\n" + "=" * 50 + "\n")


if __name__ == "__main__":
    get_list_files_in_buckets(["the-lab-bucket"], prefix="cvat/")
